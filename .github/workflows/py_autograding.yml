name: GitHub Classroom autograding and update moodle

on:
  workflow_call:
  workflow_dispatch:

env:
  DEVOPS_DIR: devops
  GHSECRET: ${{ secrets.GITHUB_TOKEN }}
  TARGET_URL: ${{ vars.MOODLE_URL }}
  TOKEN: ${{ secrets.MOODLE_TOKEN }}
  FUNCTION: mod_externalassignment_update_grade
  USERNAME: ${{ github.actor }}
  SERVER: ${{ github.server_url }}
  REPO: ${{ github.repository }}
  FILE_UNITTESTS: unittests.json
  FILE_LINT: lint.json

permissions:
  checks: write
  actions: read
  contents: read

jobs:
  grading:
    # autograding an assignment in GitHub Classroom
    runs-on: ubuntu-latest
    steps:
      - name: Checkout student repo
        uses: actions/checkout@v4

      - name: Checkout autograde repo
        uses: actions/checkout@v4
        with:
          repository: BZZ-Commons/pygrader
          path: autograde
          ref: main

      - name: Copy conftest.py to student repo
        run: cp ./autograde/conftest.py ./conftest.py

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip3 install flake8 pytest
          if [ -f requirements.txt ]; then pip3 install -r requirements.txt; fi
          if [ -f ./autograde/requirements.txt ]; then pip3 install -r ./autograde/requirements.txt; fi

      - name: Run Tests and Upload to Moodle
        run: python3 ./autograde/py_main.py

      - name: Python test
        id: python-test
        uses: classroom-resources/autograding-python-grader@v1
        with:
          timeout: '15'
          max-score: '100'
          setup-command: 'pip install -r requirements.txt'

      - name: Autograding Reporter
        uses: ./
        env:
          PYTHON-TEST_RESULTS: "${{steps.python-test.outputs.result}}"
        with:
          runners: python-test